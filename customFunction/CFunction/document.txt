/** 各文件的使用API文档 */
CFRouteComponent: 微量级路由跳转，目的统一controller之间的API,规范controller都是统一的对外接口
```
/**
上级页面：
- (CFRouteComponent *)cf_registerPushByControllerName:(NSString *)controllerName; // 创建一个controller
- (UIViewController *)cf_registerController;// 获取创建的controller
- (void)setCFParam:(NSDictionary *)param; //传递一个NSDictionary
- (void)setCFID:(NSNumber *)ID; // 传递一个NSNumber
- (void)setCFTitle:(NSString *)title; // 传递一个NSString
- (void)setCFModel:(NSObject<CFFMDBModelProtocol> *)model;// 传递一个model
- (void)setCFBlock:(void (^)(NSDictionary *param))block;// 传递一个回调函数
*/
// eg:跳转到ListViewController页面
- (void)pushListController{
CFRouteComponent *route = [self cf_registerPushByControllerName:@"ListViewController"];
[route setCFTitle:@"列表"];
[self.navigationController pushViewController:self.cf_registerController animated:YES];
}


/**
下级页面：
- (NSDictionary *)cf_paramValue;// 获取上级页面传递的NSDictionary
- (NSObject<CFFMDBModelProtocol> *)cf_modelValue;// 获取上级页面传递的model
- (NSNumber *)cf_IDValue;// 获取上级页面传递的ID
- (NSString *)cf_titleValue;// 获取上级页面传递的NSString
- (void(^)(NSDictionary *param))cf_blockValue;// 获取上级页面传递的回调函数
*/
// eg:ListViewController获取传递的值以及回调
- (void)setColtro{
self.title = self.cf_titleValue;
self.cf_IDValue;
self.cf_paramValue;
self.cf_blockValue;
}
```
CFKitComponent: View的基类
CFHudComponent: alert弹出帮助类
CFHttpComponent: 网络类
CFFMDBComponent: 数据持久化帮助类
CFControllerComponent: 控制器帮助类
```
CFNavButtonBuilder : UIBarButtonItem 构建器
```
CFContactsComponent: 通讯录管理类
```
// finishblcok 要记得调用，调用finishblcok会持久化通讯录
+(void)CFRequestContactsComplete:(void (^)(NSArray<CFModelContacts *> * contacts,void(^finishblcok)(void)))completeBlock AndFireAlertShow:(void(^)(void))alertShowBlock;
```
CFAuthorPermissionComponent: 权限检测
```
CFPermissionConfig：中重写alertShowWithTitle方法完成对用户的提示
```
CFAuthorComponent：用户持久化管理类(登陆成功等，UserAccountInfoAdditional附加信息的存储，根据业务自己改)

CFNotificationComponent： 通知的封装























/** 组件 **/

# 网络层组件(CFHttpComponent)(实现方式:继承):
    配置以下文件：
    CFHttpClickBase+CFClickBaseErrorConfig.m
    CFHttpConfiguration+CFClildrenConfig.m
    使用:
    1. 继承自 CFHttpClickBase
    2. url配置写在配置文件中（CFHttpConfiguration+CFClildrenConfig.m）
    2. 然后按照模版写子类写在CFClickChildrens文件夹中，CFHttpClickChilderHeader引用子类.h文件
# 页面跳转的路由
    1. 解除耦合
    2. 规定模版 (param, model ,block)构成
    


# 数据层持久化层组件(CFFMDBComponent):
    配置以下文件：
    1. CFFMDBConfig.m
    2. 持久化的model需要遵循 CFFMDBModelProtocol 协议

# 登录用户持久化组件(CFAuthorComponent):

# 手机通讯录(CFModelContacts.h)
    自定义 CFModelContacts 模型


# 权限检测组件(CFAuthorPermissionComponent):
    配置以下文件：
    CFPermissionConfig.m


# 路径获取组件(CFFilePathComponent):



/** 延展 **/




/** 宏 **/
























































